/*
Protects a secret with a password and returns a closure that reveals the secret if the correct password is provided.
- Parameters:
  - secret: The secret string to be protected.
  - password: The password required to reveal the secret.
- Returns: A closure that takes a password string and returns the secret if the password is correct, otherwise returns a denial message.
*/
func protectSecret(_ secret: String, withPassword password: String) -> (String) -> String {
  { $0 == password ? secret : "Sorry. No hidden secrets here." }
}

/*
Generates a combination for a room using a provided function.
- Parameters:
  - room: The room number for which the combination is generated.
  - f: A function that takes an integer and returns an integer.
- Returns: A tuple containing three integers, each generated by applying the function `f` to the room number in succession.
*/
func generateCombination(forRoom room: Int, usingFunction f: (Int) -> Int) -> (Int, Int, Int) {
  (f(room), f(f(room)), f(f(f(room))))  
}
